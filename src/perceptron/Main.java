package perceptron;

import java.awt.Color;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Pedro Cesar <pc.freittas@gmail.com>
 */
public final class Main extends javax.swing.JFrame {
    
    // Instância Classe MDRP
    MDRP iMDRP = new MDRP();
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        tela_Centro();
        jTextPane1.setText("Sistema pronto !");

    }
    public void tela_Centro(){
        
        this.setResizable(false);
        java.awt.Dimension tam = this.getToolkit().getScreenSize();      
        int x = (int) ((tam.getWidth()  - this.getSize().getWidth() ) / 2);
        int y = (int) ((tam.getHeight() - this.getSize().getHeight()) / 2);
        this.setLocation(x,y); 
    }
    
    private void Grafico(){
    
        //CategoryDataset cds;
        String titulo = "Problema 2D";
        String eixox = "X";
        String eixoy = "Y";
        boolean legenda = true;
        boolean tooltips = false;
        boolean urls = false;
        
        JFreeChart graf = ChartFactory.createXYLineChart(
                titulo,
                eixox,
                eixoy,
                datGraf(),
                PlotOrientation.HORIZONTAL,
                legenda,
                tooltips,
                urls);
                
        XYPlot xyPlot = (XYPlot) graf.getPlot();
//        xyPlot.setDomainCrosshairVisible(true);
//        xyPlot.setRangeCrosshairVisible(true);

        XYLineAndShapeRenderer render = new DefaultXYItemRenderer();
        //Pontos Centrais
        render.setSeriesLinesVisible(0, false);
        render.setSeriesShapesVisible(0, true);
        //Pontos Aleatórios
        render.setSeriesLinesVisible(1, false);
        render.setSeriesShapesVisible(1, true);
        //Reta
        render.setSeriesLinesVisible(2, true);
        render.setSeriesShapesVisible(2, false);
  
        xyPlot.setRenderer(render);
        
        XYItemRenderer renderer = xyPlot.getRenderer();
        renderer.setSeriesPaint(0, Color.blue);
        NumberAxis domain = (NumberAxis) xyPlot.getDomainAxis();
        domain.setVerticalTickLabels(true);
                
        ChartPanel myChartPanel = new ChartPanel(graf, true);
        myChartPanel.setSize(jPanel1.getWidth(),jPanel1.getHeight());
        myChartPanel.setVisible(true);
        
        jPanel1.removeAll();
        jPanel1.add(myChartPanel);
        jPanel1.revalidate();
        jPanel1.repaint(); 
        
    }
    
    private XYDataset datGraf(){
        /* Dados do Gráfico
         * 
         */
        
        XYSeriesCollection xyDatCol = new XYSeriesCollection();
        XYSeries graficPC = new XYSeries("Pts Centrais");
        XYSeries graficPA = new XYSeries("Pts Aleatórios");
        XYSeries graficRT = new XYSeries("Reta");
        
        // Insere os dados nas váriáveis correspondentes        
        
        // Pontos Centrais
        int qntPC = iMDRP.matrPC.length;
        int dimPC = iMDRP.matrPC[0].length;
        for(int c1=0; c1< qntPC; c1++){
            for(int c2=0; c2< dimPC ; c2++){
                graficPC.add(iMDRP.matrPC[c1][0],iMDRP.matrPC[c1][1]);
            }
        }
        // Pontos Aleatórios
        int qntPA = iMDRP.matrPA.length;
        int dimPA = iMDRP.matrPA[0].length;
        for(int c1=0; c1< qntPA; c1++){
            for(int c2=0; c2< dimPA; c2++){
            graficPA.add(iMDRP.matrPA[c1][c2][0],iMDRP.matrPA[c1][c2][1]);
            }
        }
        // Reta
        graficRT.add(0,0);
        graficRT.add(10,100);
        
        xyDatCol.addSeries(graficPC);
        xyDatCol.addSeries(graficPA);
        xyDatCol.addSeries(graficRT);
        return xyDatCol;
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 217, 180));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 394, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(jTextPane1);

        jButton3.setText("Start");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                        .add(18, 18, 18)
                        .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton3))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        iMDRP.iniciar();
        if(iMDRP.onLnPC){
            iMDRP.setConfig(10, 50);
            iMDRP.geraMatr();
            Grafico();
        }
        else{
            System.out.println("Sem dados");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
